#name: 31. Release
#run-name: 31. Release - Composite | env - ${{ inputs.target-env }}
#
#on:
#  #  push:
#  #    branches: [ "main" ]
#  #  pull_request:
#  # https://crontab.cronhub.io/
#  #  schedule:
#  #    - cron: '0 0 * * *'
#  workflow_dispatch:
#    inputs:
#      target-env:
#        description: Which environment to target for dependency installation
#        type: choice
#        options:
#          - dev
#          - prod
#
#env:
#  working-directory: 20-maven-java-21-spring-boot
#jobs:
#  buildA:
#    runs-on: ubuntu-latest
#    defaults:
#      run:
#        working-directory: ${{ env.working-directory }}
#    steps:
#      - uses: actions/checkout@v4
#      - name: Setup Maven and java 21
#        id: setup-deps
#        uses: ./.github/actions/maven-java-21-spring-boot
#      - name: Clean
#        run: mvn clean
#      - name: Build
#        run: mvn install
#      - name: Push to Docker repository
#        run: |
#          echo "Push to nexus repository"
#          mvn jib:build
#      - name: Deploy on aws
#        run: |
#          echo "Deploy on aws"



name: Build and Push Docker Image

on:
  push:
    branches:
      - main
env:
  working-directory: 20-maven-java-21-spring-boot
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Java
      - uses: actions/checkout@v4
      - name: Setup Maven and java 21
        id: setup-deps
        uses: ./.github/actions/maven-java-21-spring-boot

      # Build the Java application
      - name: Build with Maven
        run: mvn -B clean package --file pom.xml

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build the Docker image
      - name: Build Docker image
        run: docker build -t ivosahlik/my-java-app:latest .

      # Push the Docker image
      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/my-java-app:latest

